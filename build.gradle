import jp.classmethod.aws.gradle.ec2.AmazonEC2RunInstanceTask;

plugins {
	id 'org.springframework.boot' version '2.0.5.RELEASE'
	id "jp.classmethod.aws.ec2" version "0.38"
}

subprojects{
	apply plugin: "java"
	apply plugin: "eclipse"
	apply plugin: "org.springframework.boot"
	
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8
	
	repositories {
	    mavenCentral()
	}
	
	dependencies {
	    compile ("com.amazonaws:aws-java-sdk:1.11.428")
	    compile ("org.apache.cxf:cxf-spring-boot-starter-jaxrs:3.2.6")
	    compile ("javax.inject:javax.inject:1")
	}
}

aws {
  profileName = 'default'
  region = 'eu-west-3'
}

task deployEC2Instance(type: AmazonEC2RunInstanceTask) {
	String userDataScript = new File("main-instance/src/main/resources/initializeEC2.sh").getText("UTF-8")
	ami "ami-0a2ca21adb4a04084" //Ubuntu Server 18.04 on eu-west-3 (Paris)
	keyName "cloudcomputing"
	instanceType "t2.micro"
	userData userDataScript
}

task(uploadBootJarFiles){
	dependsOn subprojects.bootJar
	if(project.hasProperty("instanceURL")){
		exec {
			instanceURL = project.property("instanceURL")
			commandLine "scp", "-o", "stricthostkeychecking=no", "app-orchestrator/build/libs/app-orchestrator.jar", "load-balancer/build/libs/load-balancer.jar", "main-instance/build/libs/main-instance.jar", "ubuntu@${instanceURL}:~"
		}
	}
}

task deployApplication(){
	dependsOn uploadBootJarFiles
}
